[{"C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\index.js":"1","C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\App.js":"2","C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\reportWebVitals.js":"3","C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\Game.js":"4","C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\Board.js":"5","C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\eventsfile.js":"6"},{"size":552,"mtime":1680636352116,"results":"7","hashOfConfig":"8"},{"size":355,"mtime":1680636352095,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1680636352120,"results":"10","hashOfConfig":"8"},{"size":12801,"mtime":1680637533762,"results":"11","hashOfConfig":"8"},{"size":14677,"mtime":1680637332167,"results":"12","hashOfConfig":"8"},{"size":6124,"mtime":1680637533738,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hxg5l9",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\index.js",[],[],"C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\App.js",["33","34"],[],"C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\reportWebVitals.js",[],[],"C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\Game.js",["35","36","37","38","39","40","41","42","43","44"],[],"import { TurnOrder, Client, Server, Game } from \"boardgame.io/core\";\r\nimport montyPythonImage from \"./monypython.png\";\r\n\r\nimport react from 'react';\r\nimport { UpwardMobilityBoard } from \"./Board\";\r\nimport {eventsArray, itemsArray, buffsArray} from \"./eventsfile\";\r\nexport const UpwardsMobility = {\r\n\r\n    // Turn phase flow\r\n    // 1) Roll dice move piece\r\n    // 2) Choose event or use item\r\n    // 3a) If event, show event, if answer question correctly something good happens otherwise something bad happens\r\n    // if correct answer than they pick up item and or gain currency then end turn\r\n    // if incorrect answer than negativeness happens then end turn\r\n    // 3b) If they choose the item, activate the item and do item thing and then show event\r\n\r\n    // rollScreen\r\n    // eventOrItemScreen\r\n    // itemScreen\r\n    // eventScreen\r\n    // correctAnswerScreen\r\n    // wrongAnswerScreen\r\n    // endTurnScreen\r\n\r\n    setup: () => ({\r\n        players: {\r\n            0: {\r\n                position: 0,\r\n                inventory: [\r\n                    // { name: \"Staff of MoMoney\", image: montyPythonImage, description: \"item 1 description\", onUse: \"You randomly generate between 0 and 10 coins\" },\r\n                    // { name: \"Staff of NoMoney\", image: montyPythonImage, description: \"item 2 description\", onUse: \"You randomly lose between 0 and 10 coins\" },\r\n                    // { name: \"Orb of MoMoney\", image: montyPythonImage, description: \"item 3 description\", onUse: \"You gain the buff of MoMoney for 3 turns.\" }\r\n                ],\r\n                buffs: [],\r\n                currency: 0,\r\n                jobTitle: \"Starting job title\",\r\n                jobTitleDescription: \"Starting job description\",\r\n                selectedOption: -1,\r\n\r\n            },\r\n            1: {\r\n                position: 0,\r\n                inventory: [\r\n                    // { name: \"Staff of MoMoney\", image: montyPythonImage, description: \"item 1 description\", onUse: \"You randomly generate between 0 and 10 coins\" },\r\n                    // { name: \"Staff of NoMoney\", image: montyPythonImage, description: \"item 2 description\", onUse: \"You randomly lose between 0 and 10 coins\" },\r\n                    // { name: \"Orb of MoMoney\", image: montyPythonImage, description: \"item 3 description\", onUse: \"You gain the buff of MoMoney for 3 turns.\" }\r\n                ],\r\n                buffs: [],\r\n                currency: 0,\r\n                jobTitle: \"Starting job title\",\r\n                jobTitleDescription: \"Starting job title description\",\r\n                selectedOption: -1,\r\n\r\n            },\r\n            moveDist: 0,\r\n        },\r\n\r\n        jobTitles: [\r\n            {name: \"job title 1\", description: \"description for job title 1\", previouslyHeldBy: []},\r\n            {name: \"job title 2\", description: \"description for job title 2\", previouslyHeldBy: []},\r\n            {name: \"job title 3\", description: \"description for job title 3\", previouslyHeldBy: []},\r\n            {name: \"job title 4\", description: \"description for job title 4\", previouslyHeldBy: []},\r\n    ],\r\n\r\n        currentEvent: null,\r\n\r\n        board: {\r\n            0: { currency: 0 },\r\n            1: { currency: 2 },\r\n            2: { currency: 2 },\r\n            3: { currency: -1 },\r\n            4: { currency: 3 },\r\n            5: { currency: 5, },\r\n            6: { currency: 1 },\r\n            7: { currency: 0 },\r\n            8: { currency: 0 },\r\n            9: { currency: -2 },\r\n            10: { currency: 0 },\r\n            11: { currency: 0 },\r\n            12: { currency: 2 },\r\n            13: { currency: 2 },\r\n            14: { currency: -1 },\r\n            15: { currency: 3 },\r\n            16: { currency: -2 },\r\n            17: { currency: 1 },\r\n            18: { currency: 2 },\r\n            19: { currency: 0 },\r\n            20: { currency: -2 },\r\n            21: { currency: 2 },\r\n            22: { currency: -2 },\r\n            23: { currency: -2 },\r\n            24: { currency: 0 },\r\n            25: { currency: 0 },\r\n        },\r\n\r\n\r\n    }),\r\n    turn: {\r\n        order: TurnOrder.CONTINUE,\r\n    },\r\n\r\n    // Define the moves for rolling the dice and updating the game state.\r\n    moves: {\r\n        rollDice: ({G, ctx, events}) => {\r\n            const die1 = Math.floor(Math.random() * 6) + 1;\r\n            const die2 = Math.floor(Math.random() * 6) + 1;\r\n            let moveDist = die1 + die2;\r\n            G.moveDist = moveDist;\r\n            G.players[ctx.currentPlayer].position += moveDist;\r\n\r\n            let getId = \"playerToken\" + ctx.currentPlayer\r\n            let currPlayToken = document.getElementById(getId)\r\n            // console.log(document.getElementById(\"playerToken\" + ctx.currentPlayer).style.top)\r\n            let calc = (parseInt(document.getElementById(getId).style.top.toString().substring(0,2)))\r\n            let disCalc = calc - (calc * (.025 * moveDist))\r\n            disCalc = disCalc + \"%\"\r\n            document.getElementById(getId).style.top = disCalc\r\n\r\n            console.log(\"Player position: \" + G.players[ctx.currentPlayer].position)\r\n\r\n\r\n\r\n            const player = G.players[ctx.currentPlayer];\r\n            if (player.position >= 10 && player.position <= 20) {\r\n                console.log(\"Inside of job title check 10 - 20. Player position: \" + player.position)\r\n                // Choose a random job title from the list that the player has not held before\r\n                let availableJobTitles = G.jobTitles.filter((jobTitle) => !jobTitle.previouslyHeldBy.includes(ctx.currentPlayer));\r\n                if (availableJobTitles.length === 0) {\r\n                    availableJobTitles = G.jobTitles;\r\n                }\r\n                const jobTitleIndex = Math.floor(Math.random() * availableJobTitles.length);\r\n                const jobTitle = availableJobTitles[jobTitleIndex];\r\n                player.jobTitle = jobTitle.name;\r\n                player.jobTitleDescription = jobTitle.description;\r\n                jobTitle.previouslyHeldBy.push(ctx.currentPlayer);\r\n            }\r\n            if (player.position >= 20 && player.position <= 30) {\r\n                console.log(\"Inside of job title check 20 - 30. Player position: \" + player.position)\r\n                let availableJobTitles = G.jobTitles.filter((jobTitle) => !jobTitle.previouslyHeldBy.includes(ctx.currentPlayer));\r\n                if (availableJobTitles.length === 0) {\r\n                    availableJobTitles = G.jobTitles;\r\n                }\r\n                const jobTitleIndex = Math.floor(Math.random() * availableJobTitles.length);\r\n                const jobTitle = availableJobTitles[jobTitleIndex];\r\n                player.jobTitle = jobTitle.name;\r\n                player.jobTitleDescription = jobTitle.description;\r\n                jobTitle.previouslyHeldBy.push(ctx.currentPlayer);\r\n            }\r\n            if (player.position >= 30 && player.position <= 40) {\r\n                console.log(\"Inside of job title check 30 - 40. Player position: \" + player.position)\r\n                let availableJobTitles = G.jobTitles.filter((jobTitle) => !jobTitle.previouslyHeldBy.includes(ctx.currentPlayer));\r\n                if (availableJobTitles.length === 0) {\r\n                    availableJobTitles = G.jobTitles;\r\n                }\r\n                const jobTitleIndex = Math.floor(Math.random() * availableJobTitles.length);\r\n                const jobTitle = availableJobTitles[jobTitleIndex];\r\n                player.jobTitle = jobTitle.name;\r\n                player.jobTitleDescription = jobTitle.description;\r\n                jobTitle.previouslyHeldBy.push(ctx.currentPlayer);\r\n            }\r\n            if (player.position >= 40 && player.position <= 50) {\r\n                console.log(\"Inside of job title check 40 - 50. Player position: \" + player.position)\r\n                let availableJobTitles = G.jobTitles.filter((jobTitle) => !jobTitle.previouslyHeldBy.includes(ctx.currentPlayer));\r\n                if (availableJobTitles.length === 0) {\r\n                    availableJobTitles = G.jobTitles;\r\n                }\r\n                const jobTitleIndex = Math.floor(Math.random() * availableJobTitles.length);\r\n                const jobTitle = availableJobTitles[jobTitleIndex];\r\n                player.jobTitle = jobTitle.name;\r\n                player.jobTitleDescription = jobTitle.description;\r\n                jobTitle.previouslyHeldBy.push(ctx.currentPlayer);\r\n            }\r\n\r\n            console.log(\"Current player job title : \" + G.players[ctx.currentPlayer].jobTitle)\r\n\r\n            // Check for players active buffs\r\n            // G.players[ctx.currentPlayer].buffs.forEach((buff) => {\r\n            //     if (buff.type === \"moMoneyBuff\") {\r\n            //         moveDist += 1;\r\n            //         buff.duration--;\r\n            //         if (buff.duration === 0) {\r\n            //             G.players[ctx.currentPlayer].buffs.splice(\r\n            //                 G.players[ctx.currentPlayer].buffs.indexOf(buff),\r\n            //                 1\r\n            //             );\r\n            //         }\r\n            //     }\r\n            // });\r\n\r\n\r\n            G.players[ctx.currentPlayer].buffs.forEach((buff, index) => {\r\n                switch (buff.name) {\r\n                    case \"Buff of Mo Money\":\r\n                        G.players[ctx.currentPlayer].currency += 2;\r\n                        buff.duration--;\r\n\r\n                        if (buff.duration === 0) {\r\n                            G.players[ctx.currentPlayer].buffs.splice(index, 1);\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n\r\n            // G.currentEvent = eventsArray[Math.floor(Math.random() * eventsArray.length)];\r\n            G.currentEvent = eventsArray[Math.floor(Math.random() * 2)];\r\n\r\n            console.log(\"current event reward type: \", G.currentEvent.eventReward.type)\r\n\r\n            events.setPhase(\"eventOrItemScreen\");\r\n        },\r\n\r\n        addCurrency: ({G, ctx, events}, currency) => {\r\n            G.players[ctx.currentPlayer].currency += currency;\r\n        },\r\n\r\n        loseCurrency: ({G, ctx, events}, currency) => {\r\n            G.players[ctx.currentPlayer].currency -= currency;\r\n        },\r\n\r\n        moveForward: ({G, ctx, events}, moveDist) => {\r\n            G.players[ctx.currentPlayer].position += moveDist;\r\n        },\r\n\r\n        moveBackward: ({G, ctx, events}, moveDist) => {\r\n            G.players[ctx.currentPlayer].position -= moveDist;\r\n        },\r\n\r\n        selectAnswer({G, ctx}, answerIndex) {\r\n            G.players[ctx.currentPlayer].selectedOption = answerIndex;\r\n        },\r\n\r\n        pickUpItem: ({G, ctx, events}, name) => {\r\n            // const itemCell = G.board[G.players[ctx.currentPlayer].position];\r\n            // const itemRef = itemCell.item;\r\n\r\n            // G.players[ctx.currentPlayer].inventory.push(itemsArray[id]);\r\n\r\n            if (G.currentEvent.eventReward.type === \"item\") {\r\n                G.players[ctx.currentPlayer].inventory.push(G.currentEvent.eventReward.item.name);\r\n            }\r\n            if (G.currentEvent.eventReward.type === \"buff\") {\r\n                G.players[ctx.currentPlayer].buffs.push(G.currentEvent.eventReward.buff);\r\n            }\r\n\r\n        },\r\n\r\n        // use item function\r\n\r\n        useItem: ({G, ctx, events}, item) => {\r\n\r\n            console.log(\"use item function\");\r\n\r\n            switch (item) {\r\n                case \"Staff of MoMoney\":\r\n                    G.players[ctx.currentPlayer].currency += Math.random() * 5;\r\n                    break;\r\n                case \"Staff of NoMoney\":\r\n                    G.players[ctx.currentPlayer].currency -= Math.random() * 5;\r\n                    break;\r\n                case \"Orb of MoMoney\":\r\n                    G.players[ctx.currentPlayer].buffs.push({name: \"Buff of Mo Money\", duration: 3});\r\n                    break;\r\n            }\r\n\r\n\r\n            const itemIndex = G.players[ctx.currentPlayer].inventory.indexOf(item);\r\n            G.players[ctx.currentPlayer].inventory.splice(itemIndex, 1);\r\n\r\n        },\r\n\r\n        // apply buff function\r\n\r\n        applyBuff: ({ G, ctx }, playerId, buffType, duration) => {\r\n            G.players[ctx.currentPlayer].buffs.push({ type: buffType, duration: duration });\r\n        },\r\n\r\n    },\r\n    phases: {\r\n        rollScreen: {\r\n            start: true\r\n        },\r\n        eventOrItemScreen: {\r\n\r\n        },\r\n        useItemScreen: {\r\n\r\n        },\r\n        eventScreen: {\r\n\r\n        },\r\n        correctAnswerScreen: {\r\n\r\n        },\r\n        wrongAnswerScreen: {\r\n\r\n        },\r\n        endTurnScreen: {\r\n\r\n        },\r\n        pickUpItemScreen: {\r\n\r\n        },\r\n        itemEffectResultScreen: {\r\n\r\n        },\r\n        useItemOnPlayerScreen: {\r\n\r\n        },\r\n        winngingScreen: {\r\n\r\n        }\r\n    },\r\n}","C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\Board.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],[],"C:\\Users\\jnaho\\Desktop\\Capstone Project Backend\\upwardmobility\\src\\eventsfile.js",["70","71","72","73","74","75"],[],{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":13},{"ruleId":"76","severity":1,"message":"81","line":1,"column":21,"nodeType":"78","messageId":"79","endLine":1,"endColumn":27},{"ruleId":"76","severity":1,"message":"82","line":1,"column":29,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"83","line":1,"column":37,"nodeType":"78","messageId":"79","endLine":1,"endColumn":41},{"ruleId":"76","severity":1,"message":"84","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":29},{"ruleId":"76","severity":1,"message":"86","line":6,"column":22,"nodeType":"78","messageId":"79","endLine":6,"endColumn":32},{"ruleId":"76","severity":1,"message":"87","line":6,"column":34,"nodeType":"78","messageId":"79","endLine":6,"endColumn":44},{"ruleId":"76","severity":1,"message":"88","line":112,"column":17,"nodeType":"78","messageId":"79","endLine":112,"endColumn":30},{"ruleId":"89","severity":1,"message":"90","line":192,"column":17,"nodeType":"91","messageId":"92","endLine":201,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":253,"column":13,"nodeType":"91","messageId":"92","endLine":263,"endColumn":14},{"ruleId":"76","severity":1,"message":"93","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"94","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":12},{"ruleId":"76","severity":1,"message":"95","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":18},{"ruleId":"76","severity":1,"message":"96","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":16},{"ruleId":"76","severity":1,"message":"97","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":18},{"ruleId":"76","severity":1,"message":"98","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":20,"column":5,"nodeType":"78","endLine":20,"endColumn":14,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":39,"column":26,"nodeType":"104","messageId":"105","endLine":39,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":41,"column":26,"nodeType":"104","messageId":"105","endLine":41,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":43,"column":26,"nodeType":"104","messageId":"105","endLine":43,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":45,"column":26,"nodeType":"104","messageId":"105","endLine":45,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":47,"column":26,"nodeType":"104","messageId":"105","endLine":47,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":49,"column":26,"nodeType":"104","messageId":"105","endLine":49,"endColumn":28},{"ruleId":"99","severity":1,"message":"106","line":55,"column":26,"nodeType":"107","endLine":55,"endColumn":30},{"ruleId":"76","severity":1,"message":"108","line":59,"column":12,"nodeType":"78","messageId":"79","endLine":59,"endColumn":25},{"ruleId":"76","severity":1,"message":"109","line":59,"column":27,"nodeType":"78","messageId":"79","endLine":59,"endColumn":43},{"ruleId":"76","severity":1,"message":"110","line":64,"column":11,"nodeType":"78","messageId":"79","endLine":64,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":77,"column":17,"nodeType":"113","endLine":77,"endColumn":109},{"ruleId":"89","severity":1,"message":"90","line":83,"column":5,"nodeType":"91","messageId":"92","endLine":245,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":88,"column":21,"nodeType":"113","endLine":88,"endColumn":191},{"ruleId":"111","severity":1,"message":"112","line":117,"column":25,"nodeType":"113","endLine":117,"endColumn":98},{"ruleId":"111","severity":1,"message":"112","line":258,"column":13,"nodeType":"113","endLine":258,"endColumn":147},{"ruleId":"111","severity":1,"message":"112","line":264,"column":13,"nodeType":"113","endLine":264,"endColumn":129},{"ruleId":"111","severity":1,"message":"112","line":335,"column":13,"nodeType":"113","endLine":335,"endColumn":133},{"ruleId":"111","severity":1,"message":"112","line":336,"column":13,"nodeType":"113","endLine":336,"endColumn":143},{"ruleId":"76","severity":1,"message":"114","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"115","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":16},{"ruleId":"76","severity":1,"message":"116","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":16},{"ruleId":"76","severity":1,"message":"117","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":20},{"ruleId":"76","severity":1,"message":"118","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":16},{"ruleId":"76","severity":1,"message":"119","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'Client' is defined but never used.","'Server' is defined but never used.","'Game' is defined but never used.","'react' is defined but never used.","'UpwardMobilityBoard' is defined but never used.","'itemsArray' is defined but never used.","'buffsArray' is defined but never used.","'currPlayToken' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Component' is defined but never used.","'dice' is defined but never used.","'playerList' is defined but never used.","'gamelogo' is defined but never used.","'moveDist' is defined but never used.","'eventsArray' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPlayerName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [G.players] as a second argument to the useEffect Hook.",["120"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'alreadyGen' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'timeRemaining' is assigned a value but never used.","'setTimeRemaining' is assigned a value but never used.","'handleAnswerSelect' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UpwardsMobility' is defined but never used.","'pixelCat' is defined but never used.","'usbDrive' is defined but never used.","'windowsError' is defined but never used.","'alleyMan' is defined but never used.","'buriedTreasure' is defined but never used.",{"desc":"121","fix":"122"},"Add dependencies array: [G.players]",{"range":"123","text":"124"},[848,848],", [G.players]"]