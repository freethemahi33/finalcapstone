{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.apply = exports.InvalidOperationError = exports.test = exports.copy = exports.move = exports.replace = exports.remove = exports.add = exports.TestError = exports.MissingError = void 0;\nvar pointer_1 = require(\"./pointer\");\nvar util_1 = require(\"./util\");\nvar diff_1 = require(\"./diff\");\nvar MissingError = /** @class */function (_super) {\n  __extends(MissingError, _super);\n  function MissingError(path) {\n    var _this = _super.call(this, \"Value required at path: \" + path) || this;\n    _this.path = path;\n    _this.name = 'MissingError';\n    return _this;\n  }\n  return MissingError;\n}(Error);\nexports.MissingError = MissingError;\nvar TestError = /** @class */function (_super) {\n  __extends(TestError, _super);\n  function TestError(actual, expected) {\n    var _this = _super.call(this, \"Test failed: \" + actual + \" != \" + expected) || this;\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.name = 'TestError';\n    return _this;\n  }\n  return TestError;\n}(Error);\nexports.TestError = TestError;\nfunction _add(object, key, value) {\n  if (Array.isArray(object)) {\n    // `key` must be an index\n    if (key == '-') {\n      object.push(value);\n    } else {\n      var index = parseInt(key, 10);\n      object.splice(index, 0, value);\n    }\n  } else {\n    object[key] = value;\n  }\n}\nfunction _remove(object, key) {\n  if (Array.isArray(object)) {\n    // '-' syntax doesn't make sense when removing\n    var index = parseInt(key, 10);\n    object.splice(index, 1);\n  } else {\n    // not sure what the proper behavior is when path = ''\n    delete object[key];\n  }\n}\n/**\r\n>  o  If the target location specifies an array index, a new value is\r\n>     inserted into the array at the specified index.\r\n>  o  If the target location specifies an object member that does not\r\n>     already exist, a new member is added to the object.\r\n>  o  If the target location specifies an object member that does exist,\r\n>     that member's value is replaced.\r\n*/\nfunction add(object, operation) {\n  var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n  // it's not exactly a \"MissingError\" in the same way that `remove` is -- more like a MissingParent, or something\n  if (endpoint.parent === undefined) {\n    return new MissingError(operation.path);\n  }\n  _add(endpoint.parent, endpoint.key, util_1.clone(operation.value));\n  return null;\n}\nexports.add = add;\n/**\r\n> The \"remove\" operation removes the value at the target location.\r\n> The target location MUST exist for the operation to be successful.\r\n*/\nfunction remove(object, operation) {\n  // endpoint has parent, key, and value properties\n  var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n  if (endpoint.value === undefined) {\n    return new MissingError(operation.path);\n  }\n  // not sure what the proper behavior is when path = ''\n  _remove(endpoint.parent, endpoint.key);\n  return null;\n}\nexports.remove = remove;\n/**\r\n> The \"replace\" operation replaces the value at the target location\r\n> with a new value.  The operation object MUST contain a \"value\" member\r\n> whose content specifies the replacement value.\r\n> The target location MUST exist for the operation to be successful.\r\n\r\n> This operation is functionally identical to a \"remove\" operation for\r\n> a value, followed immediately by an \"add\" operation at the same\r\n> location with the replacement value.\r\n\r\nEven more simply, it's like the add operation with an existence check.\r\n*/\nfunction replace(object, operation) {\n  var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n  if (endpoint.parent === null) {\n    return new MissingError(operation.path);\n  }\n  // this existence check treats arrays as a special case\n  if (Array.isArray(endpoint.parent)) {\n    if (parseInt(endpoint.key, 10) >= endpoint.parent.length) {\n      return new MissingError(operation.path);\n    }\n  } else if (endpoint.value === undefined) {\n    return new MissingError(operation.path);\n  }\n  endpoint.parent[endpoint.key] = operation.value;\n  return null;\n}\nexports.replace = replace;\n/**\r\n> The \"move\" operation removes the value at a specified location and\r\n> adds it to the target location.\r\n> The operation object MUST contain a \"from\" member, which is a string\r\n> containing a JSON Pointer value that references the location in the\r\n> target document to move the value from.\r\n> This operation is functionally identical to a \"remove\" operation on\r\n> the \"from\" location, followed immediately by an \"add\" operation at\r\n> the target location with the value that was just removed.\r\n\r\n> The \"from\" location MUST NOT be a proper prefix of the \"path\"\r\n> location; i.e., a location cannot be moved into one of its children.\r\n\r\nTODO: throw if the check described in the previous paragraph fails.\r\n*/\nfunction move(object, operation) {\n  var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n  if (from_endpoint.value === undefined) {\n    return new MissingError(operation.from);\n  }\n  var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n  if (endpoint.parent === undefined) {\n    return new MissingError(operation.path);\n  }\n  _remove(from_endpoint.parent, from_endpoint.key);\n  _add(endpoint.parent, endpoint.key, from_endpoint.value);\n  return null;\n}\nexports.move = move;\n/**\r\n> The \"copy\" operation copies the value at a specified location to the\r\n> target location.\r\n> The operation object MUST contain a \"from\" member, which is a string\r\n> containing a JSON Pointer value that references the location in the\r\n> target document to copy the value from.\r\n> The \"from\" location MUST exist for the operation to be successful.\r\n\r\n> This operation is functionally identical to an \"add\" operation at the\r\n> target location using the value specified in the \"from\" member.\r\n\r\nAlternatively, it's like 'move' without the 'remove'.\r\n*/\nfunction copy(object, operation) {\n  var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n  if (from_endpoint.value === undefined) {\n    return new MissingError(operation.from);\n  }\n  var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n  if (endpoint.parent === undefined) {\n    return new MissingError(operation.path);\n  }\n  _add(endpoint.parent, endpoint.key, util_1.clone(from_endpoint.value));\n  return null;\n}\nexports.copy = copy;\n/**\r\n> The \"test\" operation tests that a value at the target location is\r\n> equal to a specified value.\r\n> The operation object MUST contain a \"value\" member that conveys the\r\n> value to be compared to the target location's value.\r\n> The target location MUST be equal to the \"value\" value for the\r\n> operation to be considered successful.\r\n*/\nfunction test(object, operation) {\n  var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n  // TODO: this diffAny(...).length usage could/should be lazy\n  if (diff_1.diffAny(endpoint.value, operation.value, new pointer_1.Pointer()).length) {\n    return new TestError(endpoint.value, operation.value);\n  }\n  return null;\n}\nexports.test = test;\nvar InvalidOperationError = /** @class */function (_super) {\n  __extends(InvalidOperationError, _super);\n  function InvalidOperationError(operation) {\n    var _this = _super.call(this, \"Invalid operation: \" + operation.op) || this;\n    _this.operation = operation;\n    _this.name = 'InvalidOperationError';\n    return _this;\n  }\n  return InvalidOperationError;\n}(Error);\nexports.InvalidOperationError = InvalidOperationError;\n/**\r\nSwitch on `operation.op`, applying the corresponding patch function for each\r\ncase to `object`.\r\n*/\nfunction apply(object, operation) {\n  // not sure why TypeScript can't infer typesafety of:\n  //   {add, remove, replace, move, copy, test}[operation.op](object, operation)\n  // (seems like a bug)\n  switch (operation.op) {\n    case 'add':\n      return add(object, operation);\n    case 'remove':\n      return remove(object, operation);\n    case 'replace':\n      return replace(object, operation);\n    case 'move':\n      return move(object, operation);\n    case 'copy':\n      return copy(object, operation);\n    case 'test':\n      return test(object, operation);\n  }\n  return new InvalidOperationError(operation);\n}\nexports.apply = apply;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","apply","InvalidOperationError","test","copy","move","replace","remove","add","TestError","MissingError","pointer_1","require","util_1","diff_1","_super","path","_this","name","Error","actual","expected","_add","object","key","isArray","push","index","parseInt","splice","_remove","operation","endpoint","Pointer","fromJSON","evaluate","parent","undefined","clone","length","from_endpoint","from","diffAny","op"],"sources":["C:/Users/Justin Neigh/WebstormProjects/GUI-based-Web-Game-with-Cloud-Native-Infrastructure-Backend/upwardmobility/node_modules/rfc6902/patch.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.apply = exports.InvalidOperationError = exports.test = exports.copy = exports.move = exports.replace = exports.remove = exports.add = exports.TestError = exports.MissingError = void 0;\r\nvar pointer_1 = require(\"./pointer\");\r\nvar util_1 = require(\"./util\");\r\nvar diff_1 = require(\"./diff\");\r\nvar MissingError = /** @class */ (function (_super) {\r\n    __extends(MissingError, _super);\r\n    function MissingError(path) {\r\n        var _this = _super.call(this, \"Value required at path: \" + path) || this;\r\n        _this.path = path;\r\n        _this.name = 'MissingError';\r\n        return _this;\r\n    }\r\n    return MissingError;\r\n}(Error));\r\nexports.MissingError = MissingError;\r\nvar TestError = /** @class */ (function (_super) {\r\n    __extends(TestError, _super);\r\n    function TestError(actual, expected) {\r\n        var _this = _super.call(this, \"Test failed: \" + actual + \" != \" + expected) || this;\r\n        _this.actual = actual;\r\n        _this.expected = expected;\r\n        _this.name = 'TestError';\r\n        return _this;\r\n    }\r\n    return TestError;\r\n}(Error));\r\nexports.TestError = TestError;\r\nfunction _add(object, key, value) {\r\n    if (Array.isArray(object)) {\r\n        // `key` must be an index\r\n        if (key == '-') {\r\n            object.push(value);\r\n        }\r\n        else {\r\n            var index = parseInt(key, 10);\r\n            object.splice(index, 0, value);\r\n        }\r\n    }\r\n    else {\r\n        object[key] = value;\r\n    }\r\n}\r\nfunction _remove(object, key) {\r\n    if (Array.isArray(object)) {\r\n        // '-' syntax doesn't make sense when removing\r\n        var index = parseInt(key, 10);\r\n        object.splice(index, 1);\r\n    }\r\n    else {\r\n        // not sure what the proper behavior is when path = ''\r\n        delete object[key];\r\n    }\r\n}\r\n/**\r\n>  o  If the target location specifies an array index, a new value is\r\n>     inserted into the array at the specified index.\r\n>  o  If the target location specifies an object member that does not\r\n>     already exist, a new member is added to the object.\r\n>  o  If the target location specifies an object member that does exist,\r\n>     that member's value is replaced.\r\n*/\r\nfunction add(object, operation) {\r\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\r\n    // it's not exactly a \"MissingError\" in the same way that `remove` is -- more like a MissingParent, or something\r\n    if (endpoint.parent === undefined) {\r\n        return new MissingError(operation.path);\r\n    }\r\n    _add(endpoint.parent, endpoint.key, util_1.clone(operation.value));\r\n    return null;\r\n}\r\nexports.add = add;\r\n/**\r\n> The \"remove\" operation removes the value at the target location.\r\n> The target location MUST exist for the operation to be successful.\r\n*/\r\nfunction remove(object, operation) {\r\n    // endpoint has parent, key, and value properties\r\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\r\n    if (endpoint.value === undefined) {\r\n        return new MissingError(operation.path);\r\n    }\r\n    // not sure what the proper behavior is when path = ''\r\n    _remove(endpoint.parent, endpoint.key);\r\n    return null;\r\n}\r\nexports.remove = remove;\r\n/**\r\n> The \"replace\" operation replaces the value at the target location\r\n> with a new value.  The operation object MUST contain a \"value\" member\r\n> whose content specifies the replacement value.\r\n> The target location MUST exist for the operation to be successful.\r\n\r\n> This operation is functionally identical to a \"remove\" operation for\r\n> a value, followed immediately by an \"add\" operation at the same\r\n> location with the replacement value.\r\n\r\nEven more simply, it's like the add operation with an existence check.\r\n*/\r\nfunction replace(object, operation) {\r\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\r\n    if (endpoint.parent === null) {\r\n        return new MissingError(operation.path);\r\n    }\r\n    // this existence check treats arrays as a special case\r\n    if (Array.isArray(endpoint.parent)) {\r\n        if (parseInt(endpoint.key, 10) >= endpoint.parent.length) {\r\n            return new MissingError(operation.path);\r\n        }\r\n    }\r\n    else if (endpoint.value === undefined) {\r\n        return new MissingError(operation.path);\r\n    }\r\n    endpoint.parent[endpoint.key] = operation.value;\r\n    return null;\r\n}\r\nexports.replace = replace;\r\n/**\r\n> The \"move\" operation removes the value at a specified location and\r\n> adds it to the target location.\r\n> The operation object MUST contain a \"from\" member, which is a string\r\n> containing a JSON Pointer value that references the location in the\r\n> target document to move the value from.\r\n> This operation is functionally identical to a \"remove\" operation on\r\n> the \"from\" location, followed immediately by an \"add\" operation at\r\n> the target location with the value that was just removed.\r\n\r\n> The \"from\" location MUST NOT be a proper prefix of the \"path\"\r\n> location; i.e., a location cannot be moved into one of its children.\r\n\r\nTODO: throw if the check described in the previous paragraph fails.\r\n*/\r\nfunction move(object, operation) {\r\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\r\n    if (from_endpoint.value === undefined) {\r\n        return new MissingError(operation.from);\r\n    }\r\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\r\n    if (endpoint.parent === undefined) {\r\n        return new MissingError(operation.path);\r\n    }\r\n    _remove(from_endpoint.parent, from_endpoint.key);\r\n    _add(endpoint.parent, endpoint.key, from_endpoint.value);\r\n    return null;\r\n}\r\nexports.move = move;\r\n/**\r\n> The \"copy\" operation copies the value at a specified location to the\r\n> target location.\r\n> The operation object MUST contain a \"from\" member, which is a string\r\n> containing a JSON Pointer value that references the location in the\r\n> target document to copy the value from.\r\n> The \"from\" location MUST exist for the operation to be successful.\r\n\r\n> This operation is functionally identical to an \"add\" operation at the\r\n> target location using the value specified in the \"from\" member.\r\n\r\nAlternatively, it's like 'move' without the 'remove'.\r\n*/\r\nfunction copy(object, operation) {\r\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\r\n    if (from_endpoint.value === undefined) {\r\n        return new MissingError(operation.from);\r\n    }\r\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\r\n    if (endpoint.parent === undefined) {\r\n        return new MissingError(operation.path);\r\n    }\r\n    _add(endpoint.parent, endpoint.key, util_1.clone(from_endpoint.value));\r\n    return null;\r\n}\r\nexports.copy = copy;\r\n/**\r\n> The \"test\" operation tests that a value at the target location is\r\n> equal to a specified value.\r\n> The operation object MUST contain a \"value\" member that conveys the\r\n> value to be compared to the target location's value.\r\n> The target location MUST be equal to the \"value\" value for the\r\n> operation to be considered successful.\r\n*/\r\nfunction test(object, operation) {\r\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\r\n    // TODO: this diffAny(...).length usage could/should be lazy\r\n    if (diff_1.diffAny(endpoint.value, operation.value, new pointer_1.Pointer()).length) {\r\n        return new TestError(endpoint.value, operation.value);\r\n    }\r\n    return null;\r\n}\r\nexports.test = test;\r\nvar InvalidOperationError = /** @class */ (function (_super) {\r\n    __extends(InvalidOperationError, _super);\r\n    function InvalidOperationError(operation) {\r\n        var _this = _super.call(this, \"Invalid operation: \" + operation.op) || this;\r\n        _this.operation = operation;\r\n        _this.name = 'InvalidOperationError';\r\n        return _this;\r\n    }\r\n    return InvalidOperationError;\r\n}(Error));\r\nexports.InvalidOperationError = InvalidOperationError;\r\n/**\r\nSwitch on `operation.op`, applying the corresponding patch function for each\r\ncase to `object`.\r\n*/\r\nfunction apply(object, operation) {\r\n    // not sure why TypeScript can't infer typesafety of:\r\n    //   {add, remove, replace, move, copy, test}[operation.op](object, operation)\r\n    // (seems like a bug)\r\n    switch (operation.op) {\r\n        case 'add': return add(object, operation);\r\n        case 'remove': return remove(object, operation);\r\n        case 'replace': return replace(object, operation);\r\n        case 'move': return move(object, operation);\r\n        case 'copy': return copy(object, operation);\r\n        case 'test': return test(object, operation);\r\n    }\r\n    return new InvalidOperationError(operation);\r\n}\r\nexports.apply = apply;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}